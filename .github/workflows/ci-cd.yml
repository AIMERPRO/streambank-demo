name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: ${{ secrets.DATABASE_NAME }}
          POSTGRES_USER: ${{ secrets.DATABASE_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:6
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          pip install poetry
          poetry config virtualenvs.create false
          poetry install --no-root --no-interaction --no-ansi

      - name: Run pre-commit hooks
        run: |
          pip install pre-commit
          pre-commit run --all-files

      - name: Lint with Black, isort, flake8
        run: |
          poetry run black --check .
          poetry run isort --check-only .
          poetry run flake8 .

      - name: Type-check with mypy
        env:
          PYTHONPATH: backend
        run: poetry run mypy .

      - name: Run tests with coverage
        env:
          PYTHONPATH: backend
          DJANGO_SETTINGS_MODULE: config.settings
          DATABASE_USER: ${{ secrets.DATABASE_USER }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_HOST: localhost
          DATABASE_PORT: 5432
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          CELERY_BROKER_URL: redis://localhost:6379/0
          CELERY_RESULT_BACKEND: redis://localhost:6379/1
          CACHE_BACKEND: redis://localhost:6379/1
        run: |
          poetry run pytest \
            --maxfail=1 \
            --disable-warnings \
            -q \
            --cov=backend/transactions \
            --cov=api \
            --cov-report=term-missing \
            --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          fail_ci_if_error: false
